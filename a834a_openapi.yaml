openapi: 3.0.3
info:
  title: ARINC 834A API
  description: Draft of Websocket upgrade API
  license:
    name: License Info
    url: https://example.com/license
  version: v0.0.2
servers:
  - url: https://a834a-1.suppliername.local/a834a/
tags:
  - name: 2.1. Protocol Switching
  - name: 3.2 Service Discovery
    description: Service Discovery
  - name: 4.1.4 Parameter Interfaces
  - name: 6.0 ACARS
    description: Aircraft Communication and Reporting System Messaging
  - name: 7.0 File Storage Management
  - name: 8.0 Flight Plan Data Management

paths:
  /adif/v1/subscribe:
    get:
      tags:
        - 2.1. Protocol Switching
      servers:
        - url: wss://a834a-1.suppliername.local/a834a/
      summary: "2.1.1 Protocol Switching - WebSockets NOTE: Need to be removed due to duplicate in OpenApi."
      parameters:
        - in: header
          name: Connection
          schema:
            type: string
            enum:
              - Upgrade
          required: true
        - in: header
          name: Upgrade
          schema:
            type: string
            enum:
              - websocket
          required: true
      responses:
        101:
          description: Switching Protocols to Websocket.
          headers:
            Connection:
              schema:
                type: string
            Upgrade:
              schema:
                type: string
                enum:
                  - websocket
            Sec-WebSocket-Accept:
              schema:
                type: object
          content: {}
        400:
          description: Resource can only be accessed with WebSockets.
          content:
            text/plain:
              schema:
                type: string
                example: Resource can only be access with WebSockets.
        500:
          description: adif Service is not reachable
          content: {}
        501:
          description: adif Server is not implemented
          content: {}

  /stap/v1/:
    get:
      tags:
        - 2.1. Protocol Switching
      servers:
        - url: wss://a834a-1.suppliername.local/a834a/
      summary: 2.1.2 Protocol Switching - STAP
      parameters:
        - in: header
          name: Connection
          schema:
            type: string
            enum:
              - Upgrade
          required: true
        - in: header
          name: Upgrade
          schema:
            type: string
            enum:
              - a834/stap
          required: true
      responses:
        101:
          description: Switching Protocols to WebSocket.
          headers:
            Connection:
              schema:
                type: string
            Upgrade:
              schema:
                type: string
                enum:
                  - a834
            Sec-WebSocket-Accept:
              schema:
                type: object
          content: {}
        400:
          description: Resource can only be accessed with WebSockets.
          content:
            text/plain:
              schema:
                type: string
                example: Resource can only be access with WebSockets.
        500:
          description: STAP Server is not reachable
          content: {}
        501:
          description: STAP Server is not implemented
          content: {}

  /adbp/v1/:
    get:
      tags:
        - 2.1. Protocol Switching
      servers:
        - url: wss://a834a-1.suppliername.local/a834a/
      summary: 2.1.2 Protocol Switching - ADBP
      parameters:
        - in: header
          name: Connection
          schema:
            type: string
            enum:
              - Upgrade
          required: true
        - in: header
          name: Upgrade
          schema:
            type: string
            enum:
              - a834/adbp
          required: true
      responses:
        101:
          description: Switching Protocols to WebSocket.
          headers:
            Connection:
              schema:
                type: string
            Upgrade:
              schema:
                type: string
                enum:
                  - a834
            Sec-WebSocket-Accept:
              schema:
                type: object
          content: {}
        400:
          description: Resource can only be accessed with WebSockets.
          content:
            text/plain:
              schema:
                type: string
                example: Resource can only be access with WebSockets.
        500:
          description: STAP Server is not reachable
          content: {}
        501:
          description: STAP Server is not implemented
          content: {}

  /{service}/v1/:
    get:
      tags:
        - 2.1. Protocol Switching
      servers:
        - url: wss://a834a-1.suppliername.local/a834a/
      summary: 2.1.4 Protocol Switching - Future Useages
      parameters:
        - in: path
          name: service
          description: Service on which a Websocket connection should be established.
          required: true
          schema:
            type: string
          example:
        - in: header
          name: Connection
          schema:
            type: string
            enum:
              - Upgrade
          required: true
        - in: header
          name: Upgrade
          schema:
            type: string
            pattern: "^[a-zA-Z0-9-._~!$&()*+,;=:/?@]+$"
          required: true
      responses:
        101:
          description: Switching Protocols to Websocket.
          headers:
            Connection:
              schema:
                type: string
            Upgrade:
              schema:
                type: string
                enum:
                  - a834
            Sec-WebSocket-Accept:
              schema:
                type: object
          content: {}
        400:
          description: Resource can only be accessed with WebSockets.
          content:
            text/plain:
              schema:
                type: string
                example: Resource can only be access with WebSockets.
        500:
          description: Service is not reachable
        501:
          description: Service is not implemented
          content: {}

  /services/:
    get:
      tags:
        - 3.2 Service Discovery
      summary: "3.2. Get a list of services"
      description: "An ARINC 834A server should provide a Service Discovery function enabling connected clients to discover the supported service(s)."
      responses:
        200:
          description: "The server should response by providing the list of supported services and optional description field (free content field based on string)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/3.2.Services"
        400:
          description: ""
        500:
          description: "Internal Server Error"
        503:
          description: "Service Unavailable"

  /services/{service}/version:
    get:
      tags:
        - 3.2 Service Discovery
      summary: "3.2. Get a List of supported versions of a service."
      description: "Additionally, for each supported service, the ARINC 834A server should provide a Service Discovery service based on the following REST request."
      parameters:
        - in: path
          name: service
          description: "Where {service} will one of the server's supported service"
          required: true
          schema:
            type: string
      responses:
        200:
          description: |
            OK: The server should respond with the list of supported version defined as “vx” x being an 
            integer and optional HTTP basic authentication requirement information (not providing this 
            information assumes that no authentication is required by the client).
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/3.2.ServiceSupportedVersions"
              example:
                - version: v1
                  authenticate: true
                - version: v2
                  authenticate: true
        404:
          description: Service not found.
        500:
          description: "Internal Server Error"
        503:
          description: "Service Unavailable"

  /nas/v1/:
    get:
      tags:
        - 7.0 File Storage Management
      summary: Retrieve identified root folder
      operationId: getRoot
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/7.0.PathList"

  /nas/v1/{path}:
    get:
      tags:
        - 7.0 File Storage Management
      summary: Retrieve identified folder/file
      operationId: getItem
      parameters:
        - name: path
          in: path
          description: Path
          required: true
          schema:
            type: string
            pattern: "^[a-zA-Z0-9-._~!$&()*+,;=:/?@]+$"
      responses:
        200:
          description: |
            When the query path is a folder type then an `application/json` with the path list is returned.
            When the query path is a file type then an `application/octet-stream` with 
            the `Content-Disposition` header and the file content as body is returned.
          headers:
            Content-Disposition:
              description: |
                Content-Disposition is provided in case the path belongs to a file type.<br/>
                Example: `Content-Disposition: attachment; filename=README.txt`
              schema:
                type: string
              example: attachment; filename=README.txt
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/7.0.PathList"
            application/octet-stream:
              schema:
                type: string
                format: binary
        404:
          description: not found
          content: {}
    put:
      tags:
        - 7.0 File Storage Management
      summary: Create/Update folder/file
      operationId: createItem
      parameters:
        - name: path
          in: path
          description: Path
          required: true
          schema:
            type: string
            pattern: "^[a-zA-Z0-9-._~!$&()*+,;=:/?@]+$"
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: false
      responses:
        201:
          description: created
          content: {}
        500:
          description: internal error
          content: {}
    delete:
      tags:
        - 7.0 File Storage Management
      summary: Delete folder/file
      operationId: deleteItem
      parameters:
        - name: path
          in: path
          description: Path
          required: true
          schema:
            type: string
            pattern: "^[a-zA-Z0-9-._~!$&()*+,;=:/?@]+$"
      responses:
        204:
          description: successful deletion, no content
          content: {}
        404:
          description: not found
          content: {}

  /adif/v1/parameters/{paramname}:
    get:
      tags:
        - "4.1.4 Parameter Interfaces"
      parameters:
        - in: path
          name: paramname
          required: true
          schema:
            type: string
      responses:
        200:
          description: "OK"

  /adif/v1/parameters:
    get:
      tags:
        - "4.1.4 Parameter Interfaces"
      summary: 4.1.4.2 Parameter Synchronous request API
      description: "The ARINC 834A server should allow connected clients to retrieve valid parameters using the following REST commands."
      parameters:
        - in: query
          name: names
          required: false
          schema:
            type: string
            minimum: 0
          description: |
            The list of parameters which a client want to retrieve the values should be set as a comma separated list within the path following the query "?params=".
            <br/>If now query is provided, all parameters are returned. To reduce required resources on both client and server, the client should use this function with caution.
            <br/>For multiple parameters request, the parameters should be provided as a comma separated list.
          examples:
            singleParameter:
              summary: Example of single parameter request
              value: "time_utc"
            multipleParameter:
              summary: Example of multiple parameters request
              value: "date_utc,time_utc"
            allParameter:
              summary: Example of all parameters request
              value: "*"
      responses:
        200:
          description: "OK: The server should return the requested parameters formatted with applicable JSON schema."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4.1.4.4.A834AParameters"

        403:
          description: "Forbidden: On an item that is not allowed for modification, the server should report error message 403 (Forbidden) with the list of rejected parameters as follows"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4.1.4.4.ErrorResponse"
              example:
                error: "parameter not modifiable"
                parameters: [parameter]
        404:
          description: "Not Found: If none parameter of the request could be found it should be answered with code 404 (Not Found). The name of the unknown parameter should be reported in the error message as follows"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4.1.4.4.ErrorResponse"
              example:
                error: "parameter not found"
                parameters: [parameter]
        429:
          $ref: "#/components/responses/429TooManyRequests"
        501:
          description: |
            Not Implemented: Unsupported service or Version in a URL should be answered with code. The client should not 
            expect the service to be available anytime and should not poll the server with the same request to reduce resources consumption.
        502:
          description: |
            Bad Gateway: If a proxy or reverse proxy is set-up between the A834A Client and Server, in case the proxy is 
            experiencing issue, this error code should be reported.
        503:
          description: |
            Service Unavailable: If a service is (temporary) not available (i.e. not yet fully initialized) it should 
            return this error code to indicate the client, that the service may be available soon and the client may 
            retry its request later on.(Other standard HTTP codes may be used by the A834A supplier to provide useful 
            information to the clients nevertheless, the general principle is that overlap with error codes defined in 
            the present document should be avoided.)
    put:
      tags:
        - "4.1.4 Parameter Interfaces"
      summary: 4.1.4.3 Parameter REST Set API.
      description: |
        The ARINC 834A supports also the “Write Parameter” feature. This is applicable only to specific services as detailed 
        in this document. As such this function is optional since only ADIF function is mandatory for ARINC 834A.
      requestBody:
        description: "Multiple parameters may be Set with a single request."
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/4.1.4.3.WriteParameters"
      responses:
        200:
          description: "OK: The server should return the requested parameters formatted with applicable JSON schema."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4.1.4.4.A834AParameters"
              example:
                - name: Parametername1
                  timestamp: 1000
                  value: "xxx"
                  settable: true
                - name: Parametername2
                  tiemstamp: 1000
                  value: "xxx"
                  settable: true
        403:
          description: "Forbidden: On an item that is not allowed for modification, the server should report error message 403 (Forbidden) with the list of rejected parameters as follows"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4.1.4.4.ErrorResponse"
              example:
                error: "parameter not modifiable"
                parameters: [hdg_mag, tas]
        404:
          description: "Not Found: Non-Existent parameter should be answered with code 404 (Not Found). The name of the unknown parameter should be reported in the error message as follows"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/4.1.4.4.ErrorResponse"
              example:
                error: "parameter not found"
                parameters: ["fuel_price", "coffee_temperature"]
        429:
          description: |
            Too many requests: If the server has reached the maximum number of supported clients, it should use standard HTTP code 429.
        501:
          description: |
            Not Implemented: Unsupported service or Version in a URL should be answered with code. The client should not expect the service 
            to be available anytime and should not poll the server with the same request to reduce resources consumption.
        502:
          description: |
            Bad Gateway: If a proxy or reverse proxy is set-up between the A834A Client and Server, in case the proxy is 
            experiencing issue, this error code should be reported.
        503:
          description: |
            Service Unavailable: Other standard HTTP codes may be used by the A834A supplier to provide useful information to the clients 
            nevertheless, the general principle is that overlap with error codes defined in the present document should be avoided.

  /adif/v1/subscription:
    get:
      tags:
        - 2.1. Protocol Switching
      servers:
        - url: wss://a834a-1.suppliername.local/a834a/
      summary: "2.1.1 Protocol Switching - WebSockets NOTE: Need to be removed due to duplicate in openapi."
      parameters:
        - in: header
          name: Connection
          schema:
            type: string
            enum:
              - Upgrade
          required: true
        - in: header
          name: Upgrade
          schema:
            type: string
            enum:
              - websocket
          required: true
      responses:
        101:
          description: Switching Protocols to Websocket.
          headers:
            Connection:
              schema:
                type: string
            Upgrade:
              schema:
                type: string
                enum:
                  - websocket
            Sec-WebSocket-Accept:
              schema:
                type: object
          content: {}
        400:
          description: Resource can only be accessed with WebSockets.
          content:
            text/plain:
              schema:
                type: string
                example: Resource can only be access with WebSockets.
        500:
          description: adif Service is not reachable
          content: {}
        501:
          description: adif Server is not implemented
          content: {}

  /acars/v1/uplinks:
    get:
      tags:
        - 6.0 ACARS
      summary: 6.2.1 Get a list of all Uplinks
      description: Retrieve uplinks which matches the filter criteria or all uplinks when no filter is provided.
      operationId: getAllUplinks
      parameters:
        - $ref: "#/components/parameters/IfNoneMatch"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/Start"
        - in: query
          name: mfi
          description: Filter by MFI (Message Function Identifier) to address specific applications.
          schema:
            type: string
            maxLength: 2
            minLength: 2
      responses:
        200:
          description: Returns a list of matching uplinks or an empty list when no uplinks are found.
          headers:
            ETag:
              $ref: "#/components/parameters/ETag"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/6.0.UplinkList"
        304:
          $ref: "#/components/responses/304NotModified"
    delete:
      tags:
        - 6.0 ACARS
      summary: 6.2.3 Delete all Uplinks
      description: Delete uplinks which matches the filter criteria or all uplinks when no filter is provided.
      operationId: deleteAllUplinks
      parameters:
        - in: query
          name: mfi
          description: Filter by MFI (Message Function Identifier) to address specific applications.
          schema:
            type: string
            maxLength: 2
            minLength: 2
      responses:
        204:
          description: Successful operation

  /acars/v1/uplinks/{id}:
    get:
      tags:
        - 6.0 ACARS
      summary: 6.2.2 Get a specific Uplink
      description: Retrieve an uplink for the given id.
      operationId: getUplinkById
      parameters:
        - name: id
          in: path
          description: Unique id which identifies an uplink.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Return the uplink with the specified id.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/6.0.Uplink"
        404:
          description: Uplinks with the specified id not found.
    delete:
      tags:
        - 6.0 ACARS
      summary: 6.2.4 Delete a specific Uplink
      description: Delete an uplink for the given id.
      operationId: deleteUplinkById
      parameters:
        - name: id
          in: path
          description: Unique id which identifies an uplink.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        204:
          description: Uplink successfully deleted.
        404:
          description: Uplink with the given id not found.

  /acars/v1/downlinks:
    get:
      tags:
        - 6.0 ACARS
      summary: 6.2.5 Get a list of all Downlinks
      description: Retrieve downlinks which matches the filter criteria or all downlinks when no filter is provided.
      operationId: getAllDownlinks
      parameters:
        - $ref: "#/components/parameters/IfNoneMatch"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/Start"
        - in: query
          name: mfi
          description: Filter by MFI (Message Function Identifier) to address specific applications.
          schema:
            type: string
            maxLength: 2
            minLength: 2
      responses:
        200:
          description: Returns a list of matching downlinks or an empty list when no downlinks are found.
          headers:
            ETag:
              $ref: "#/components/parameters/ETag"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/6.0.DownlinkList"
        304:
          $ref: "#/components/responses/304NotModified"
    post:
      tags:
        - 6.0 ACARS
      summary: 6.2.7 Create a new Downlink
      description: Creates a new downlink request.
      operationId: createDownlink
      requestBody:
        description: Downlink to be created.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/6.0.Downlink"
            example:
              mfi: WX
              mediaSelect: ACARS_ANY
              lifetime: 0
              dataType: ASCII
              dataSize: 82
              data: TUVUQVIgS1NUTCAyMTE2NTFaIDAxMDA1S1QgMTBTTSBGRVcwMjAgQktOMjUwIDE5LzEyIEEzMDI2IFJNSyBBTzIgU0xQMjQ0IFQwMTg5MDExNw==

      responses:
        201:
          description: Downlink request successfully created. Returns the newly created downlink.
          headers:
            Location:
              description: Contains the URI to the newly created downlink.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/6.0.Downlink"

        400:
          description: Request is malformed.
    delete:
      tags:
        - 6.0 ACARS
      summary: 6.2.8 Delete all Downlinks
      description: Delete downlinks which matches the filter criteria or all downlinks when no filter is provided.
      operationId: deleteAllDownlinks
      parameters:
        - in: query
          name: mfi
          description: Filter by MFI (Message Function Identifier) to address specific applications.
          schema:
            type: string
            maxLength: 2
            minLength: 2
      responses:
        204:
          description: Successful operation

  /acars/v1/downlinks/{id}:
    get:
      tags:
        - 6.0 ACARS
      summary: 6.2.6 Get a specific Downlink
      description: Retrieve a downlinks for the given id.
      operationId: getDownlinkById
      parameters:
        - $ref: "#/components/parameters/IfNoneMatch"
        - name: id
          in: path
          description: Unique id which identifies a downlink.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Return the downlink with the specified id.
          headers:
            ETag:
              $ref: "#/components/parameters/ETag"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/6.0.Downlink"
        304:
          $ref: "#/components/responses/304NotModified"
        404:
          description: Uplinks with the specified id not found.
    delete:
      tags:
        - 6.0 ACARS
      summary: 6.2.9 Delete a specific Downlink
      description: Delete a downlink for the given id.
      operationId: deleteDownlinkById
      parameters:
        - name: id
          in: path
          description: Unique id which identifies a downlink.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        204:
          description: Downlink successfully deleted.
        404:
          description: Downlink with the given id not found.

  /acars/v1/status:
    get:
      tags:
        - 6.0 ACARS
      summary: 6.2.10	Get the status of the channels
      description: Retrieve the status of all communication channels.
      operationId: getChannelStatus
      responses:
        200:
          description: Returns the status object for the communication channels.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/6.0.Status"

  /acars/v1/subscribe:
    get:
      tags:
        - 6.0 ACARS
      servers:
        - url: wss://a834a-1.suppliername.local/a834a/
      summary: 6.3 WebSocket Upgrade
      description: Note this is WSS not HTTP and is an UPGRADE not a POST
      operationId: subscribeAcarsNotifications
      parameters:
        - in: header
          name: Connection
          schema:
            type: string
            enum:
              - Upgrade
          required: true
        - in: header
          name: Upgrade
          schema:
            type: string
            enum:
              - websocket
          required: true
        - in: header
          name: Sec-WebSocket-Version
          schema:
            type: integer
            enum:
              - 13
          required: true
        - in: header
          name: Sec-WebSocket-Key
          schema:
            type: string
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            format: base64
          required: true
        - in: header
          name: Sec-WebSocket-Protocol
          schema:
            type: string
            enum:
              - acars-1
          required: true
      responses:
        101:
          description: Switching Protocols to Websocket.
          headers:
            Connection:
              schema:
                type: string
            Upgrade:
              schema:
                type: string
                enum:
                  - websocket
            Sec-WebSocket-Accept:
              schema:
                type: string
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                format: base64
            Sec-WebSocket-Protocol:
              schema:
                type: string
                enum:
                  - acars-1
          content: {}
        400:
          description: Resource can only be accessed with WebSockets.
          content:
            text/plain:
              schema:
                type: string
                example: Resource can only be access with WebSockets.

  /fms/v1/flightPlan:
    get:
      tags:
        - 8.0 Flight Plan Data Management
      summary: 8.x TODO
      description: Retrieve current FMS flight plan.
      operationId: getFmsFlightPlan
      responses:
        200:
          description: Returns the FMS flight plan.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/8.0.FmsFlightPlan"

components:
  schemas:
    3.2.Services:
      type: object
      properties:
        services:
          type: array
          items:
            type: object
            description: "Describes the A834a services available on the server."
            properties:
              service:
                type: string
                pattern: "^[a-zA-Z0-9-_./]+$"
              description:
                type: string
            minItems: 0
      example:
        services:
          - service: adif
            description: Avionics Parameters
          - service: nas
            description: Network Attached Storage

    3.2.ServiceSupportedVersions:
      type: array
      items:
        description: "Version supported by the A834A. Authenticate has to be set to true if HTTP Basic Authentication is required for that service."
        type: object
        properties:
          version:
            type: string
            pattern: "^v[0-9]+$"
          authenticate:
            type: boolean
            default: false
        minItems: 1

    4.1.3.timestamp:
      description: |
        Time in milliseconds based on a monotonic clock (arbitrary fixed point in the past; is not affected by 
        changes in the system time-of-day clock). This is the time of the last modification of the value of the parameter.
      type: integer
      format: int64

    UnknownParameters:
      type: object
      properties:
        unknownParameters:
          type: array
          items:
            $ref: "#/components/schemas/parameterName"
            minItems: 1
          example: ["fuel_price", "coffee_temperature"]

    4.1.4.3.WriteParameters:
      type: object
      properties:
        parameters:
          type: array
          items:
            type: object
            properties:
              name:
                $ref: "#/components/schemas/parameterName"
              timestamp:
                $ref: "#/components/schemas/4.1.3.timestamp"
              value: {}
            minItems: 1

    4.1.4.4.A834AParameters:
      description: "Schema for A834 parameter array version."
      type: object
      required:
        - parameters
      properties:
        parameters:
          type: array
          items:
            $ref: "#/components/schemas/4.1.4.4.A834AParameter"
        unknownParameters:
          type: array
          items:
            $ref: "#/components/schemas/parameterName"
          example:
            - "fuel_price"
            - "coffee_temperature"

    4.1.4.4.A834AParameter:
      description: "Schema for A834A parameter version 1.0.2"
      type: object
      properties:
        name:
          $ref: "#/components/schemas/parameterName"
        timestamp:
          $ref: "#/components/schemas/4.1.3.timestamp"
        value:
          type: object
          description: |
            Which type is strictly defined in the JSON schema (e.g., kg, knots, degrees, complex type, etc.). 'value' is set 
            to null (JSON datatype) when the parameter is not valid (that is to say for in the A429 case: not in “NO”)	
            "settable"(boolean) by default all parameters for public ARINC 834A ADIF service cannot be set by a client.
        settable:
          type: boolean
          description: "by default all parameters for public ARINC 834A ADIF service cannot be set by a client."
          default: false

    4.1.4.4.ErrorResponse:
      type: object
      properties:
        error:
          type: string
        parameters:
          type: array
          items:
            $ref: "#/components/schemas/parameterName"
      example:
        error: "ErrorMessage"
        parameters: ["fuel_price", "coffee_temperature"]

    4.1.5.1.WebSocketSubscription:
      type: object
      properties:
        NOTE:
          type: string
          example: "TODO: OPEN ITEM"

    6.0.UplinkList:
      type: object
      properties:
        selfLink:
          description: A URL that can be used to access the resource again.
          type: string
          readOnly: true
        limit:
          description: The selected limit in the query. Not provided or null when pagination was not used in the query.
          type: integer
          readOnly: true
        start:
          description: The selected start position in the query. Not provided or null when pagination was not used in the query.
          type: integer
          readOnly: true
        total:
          description: The total number of uplinks.
          type: integer
          readOnly: true
        uplinks:
          description: List of uplinks.
          type: array
          readOnly: true
          items:
            $ref: "#/components/schemas/6.0.Uplink"
      example:
        selfLink: https://server/a834a/acars/v1/uplinks
        limit: 10
        start: 20
        total: 22
        uplinks:
          - selfLink: https://server/a834a/acars/v1/uplinks/20
            id: 20
            timestamp: 2022-04-21T17:55:35.321Z
            mfi: AC
            lifetime: 10
            dataType: ASCII
            dataSize: 32
            data: SGVsbG8gV29ybGQgRnJlZSBUZXh0Lg==
          - selfLink: https://server/a834a/acars/v1/uplinks/21
            id: 21
            timestamp: 2022-04-21T18:45:15.456Z
            mfi: WX
            lifetime: 0
            dataType: ASCII
            dataSize: 82
            data: TUVUQVIgS1NUTCAyMTE2NTFaIDAxMDA1S1QgMTBTTSBGRVcwMjAgQktOMjUwIDE5LzEyIEEzMDI2IFJNSyBBTzIgU0xQMjQ0IFQwMTg5MDExNw==

    6.0.Uplink:
      type: object
      properties:
        selfLink:
          description: A URL that can be used to access the resource again.
          type: string
          readOnly: true
        id:
          description: Unique Identifier.
          type: integer
          readOnly: true
        timestamp:
          description: Timestamp when the message was received.
          type: string
          format: date-time
        mfi:
          description: Message Function Identifier to address specific applications.
          type: string
          minLength: 2
          maxLength: 2
        lifetime:
          description: Lifetime in minutes. (0 = infinite)
          multipleOf: 2
          maximum: 30
          minimum: 0
          type: integer
        dataType:
          description: Type of the data.
          type: string
          enum:
            - ASCII
            - BINARY
        dataSize:
          description: Size of the data after Base64 decoding.
          minimum: 1
          type: integer
        data:
          description: Base64 encoded data.
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: base64
      example:
        selfLink: https://server/a834a/acars/v1/uplinks/10
        id: 10
        timestamp: 2022-04-21T18:45:15.456Z
        mfi: WX
        lifetime: 0
        dataType: ASCII
        dataSize: 82
        data: TUVUQVIgS1NUTCAyMTE2NTFaIDAxMDA1S1QgMTBTTSBGRVcwMjAgQktOMjUwIDE5LzEyIEEzMDI2IFJNSyBBTzIgU0xQMjQ0IFQwMTg5MDExNw==

    6.0.DownlinkList:
      type: object
      properties:
        selfLink:
          description: A URL that can be used to access the resource again.
          type: string
          readOnly: true
        limit:
          description: The selected limit in the query. Not provided or null when pagination was not used in the query.
          type: integer
          readOnly: true
        start:
          description: The selected start position in the query. Not provided or null when pagination was not used in the query.
          type: integer
          readOnly: true
        total:
          description: The total number of downlinks.
          type: integer
          readOnly: true
        downlinks:
          description: List of downlinks.
          type: array
          readOnly: true
          items:
            $ref: "#/components/schemas/6.0.Downlink"
      example:
        selfLink: https://server/a834a/acars/v1/downlinks
        limit: 10
        start: 0
        total: 2
        downlinks:
          - selfLink: https://server/a834a/acars/v1/downlinks/3
            id: 3
            created: 2022-04-21T17:55:35.321Z
            state: ACKNOWLEDGED
            mfi: AO
            mediaSelect: ACARS_ANY
            lifetime: 0
            dataType: ASCII
            dataSize: 32
            data: SGVsbG8gV29ybGQgRnJlZSBUZXh0Lg==
          - selfLink: https://server/a834a/acars/v1/downlinks/4
            id: 4
            created: 2022-04-21T18:45:15.456Z
            state: TRANSMITTING
            mfi: WX
            mediaSelect: ACARS_ANY
            lifetime: 0
            dataType: ASCII
            dataSize: 82
            data: TUVUQVIgS1NUTCAyMTE2NTFaIDAxMDA1S1QgMTBTTSBGRVcwMjAgQktOMjUwIDE5LzEyIEEzMDI2IFJNSyBBTzIgU0xQMjQ0IFQwMTg5MDExNw==

    6.0.Downlink:
      type: object
      properties:
        selfLink:
          description: A URL that can be used to access the resource again.
          type: string
          format: URL
          readOnly: true
        id:
          type: integer
          description: Unique Identifier.
          readOnly: true
        created:
          description: Timestamp when the message was received.
          type: string
          format: date-time
          readOnly: true
        state:
          description: State of the queued downlink message.
          type: string
          enum:
            - WAITING
            - TRANSMITTING
            - SENT
            - ACKNOWLEDGED
            - TIMED_OUT
            - FAILED
        mfi:
          description: Message Function Identifier to address specific applications.
          type: string
          minLength: 2
          maxLength: 2
          example: WX
        mediaSelect:
          type: string
          enum:
            - MEDIA_ANY
            - MEDIA_GATELINK
            - MEDIA_VHF
            - MEDIA_SATCOM
            - MEDIA_HF
            - MEDIA_ANY_OTHER
        lifetime:
          description: Lifetime in minutes. (0 = infinite)
          multipleOf: 2
          maximum: 30
          minimum: 0
          type: integer
        dataType:
          description: Type of the data.
          type: string
          enum:
            - ASCII
            - BINARY
        dataSize:
          description: Size of the data after Base64 decoding.
          minimum: 1
          type: integer
        data:
          description: Base64 encoded data.
          pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
          type: string
          format: base64
      example:
        selfLink: https://server/a834a/acars/v1/downlinks/4
        id: 4
        created: 2022-04-21T18:45:15.456Z
        state: TRANSMITTING
        mfi: WX
        mediaSelect: ACARS_ANY
        lifetime: 0
        dataType: ASCII
        dataSize: 82
        data: TUVUQVIgS1NUTCAyMTE2NTFaIDAxMDA1S1QgMTBTTSBGRVcwMjAgQktOMjUwIDE5LzEyIEEzMDI2IFJNSyBBTzIgU0xQMjQ0IFQwMTg5MDExNw==

    6.0.Status:
      type: object
      properties:
        selfLink:
          description: A URL that can be used to access the resource again.
          type: string
          format: URL
          example: https://server/a834a/acars/v1/status
        updated:
          description: Timestamp when the information was updated.
          type: string
          format: date-time
        isAnyAvailable:
          description: Indicates whether any communication channel is available.
          type: boolean
          example: true
        channels:
          description: List of all communication channels and the corresponding state.
          type: array
          items:
            type: object
            properties:
              name:
                description: Name of the communication channel.
                type: string
              isAvailable:
                description: Indicates whether the channel is available or not.
                type: boolean
          example:
            - name: VHF
              isAvailable: true
            - name: HF
              isAvailable: false
            - name: SATCOM
              isAvailable: true
            - name: GATELINK
              isAvailable: false
            - name: ANY_OTHER
              isAvailable: false

    7.0.PathList:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              path:
                type: string
              pathtype:
                type: string
                enum:
                  - folder
                  - file
            required:
              - name
              - path
              - pathtype
      example:
        items:
          - name: eTLB
            path: /eTLB
            pathtype: folder
          - name: Temp
            path: /Temp
            pathtype: folder
          - name: README.txt
            path: /README.txt
            pathtype: file

    8.0.FmsFlightPlan:
      type: object
      properties:
        name:
          description: TODO
          type: string
          example: FMSTrajectory
        source:
          description: TODO
          type: string
          example: IntBusV1/2-4/5/GAMA
        timestamp:
          description: TODO
          type: integer
          example: 12345
        utc:
          description: TODO
          type: integer
          example: 12345
        value:
          description: TODO
          type: object
          properties:
            departure_airport:
              description: TODO
              type: string
              example: LFBO
            destination_airport:
              description: TODO
              type: string
              example: LFLX
            distance_to_destination:
              description: TODO
              type: number
              example: 123.5
            time_to_destination:
              description: TODO
              type: integer
              example: 241
            points:
              description: TODO
              type: array
              items:
                $ref: "#/components/schemas/8.0.FmsPoint"

    8.0.FmsPoint:
      type: object
      properties:
        name:
          description: TODO
          type: string
          example: ABUSO
        latitude:
          description: TODO
          type: number
          example: 45.8505556
        longitude:
          description: TODO
          type: number
          example: 1.7486111111111
        altitude:
          description: TODO
          type: integer
          example: 32000
        eta:
          description: TODO
          type: integer
          example: 12
        speed:
          description: TODO
          type: number
          example: 145.3
        fuel:
          description: TODO
          type: number
          example: 12540.6
        characteristics:
          description: TODO
          type: string
          enum:
            - TOP_OF_CLIMB
            - TOP_OF_DESCENT
        constraints:
          description: TODO
          type: object
          properties:
            altitude_upper_bound:
              description: TODO
              type: integer
              example: 12000
            altitude_lower_bound:
              description: TODO
              type: integer
              example: 13000
            speed_type:
              description: TODO
              type: string
              enum:
                - AT_OR_BELOW
                - AT
                - AT_OR_ABOVE
            speed_value:
              description: TODO
              type: integer
              example: 123
            time_type:
              description: TODO
              type: string
              enum:
                - AT_OR_BELOW
                - AT
                - AT_OR_ABOVE
            time_value:
              description: TODO
              type: integer
              example: 1234

    parameterName:
      type: string
      description: "Name of a parameter, please note that '.' are used for namespaces."
      pattern: "^([A-Za-z0-9_]+.)?[A-Za-z0-9_]+$"
      example: AirlineID

  parameters:
    Limit:
      description: Limit the number of results.
      in: query
      name: limit
      schema:
        type: integer
        format: int32
      example: 20
    Start:
      description: Start the result at specified position. (Zero indexed)
      in: query
      name: start
      schema:
        default: 0
        type: integer
        format: int64
    ETag:
      description: |
        The RFC7232 ETag header field in a response provides the current entity-tag for the selected resource. An entity-tag 
        is an opaque identifier for different versions of a resource over time, regardless whether multiple versions are valid 
        at the same time. An entity-tag consists of an opaque quoted string, possibly prefixed by a weakness indicator.
      example: W/"abc", "42", "c0d5809f-cbfa-4ce9-8b03-2231fee3e1ee"
      in: header
      name: ETag
      required: false
      schema:
        type: string
    IfMatch:
      description: |
        The RFC7232 If-Match header field in a request requires the server to only operate on the resource that matches at least 
        one of the provided entity-tags. This allows clients express a precondition that prevent the method from being applied 
        if there have been any changes to the resource.
      example: '"42", "c0d5809f-cbfa-4ce9-8b03-2231fee3e1ee"'
      in: header
      name: If-Match
      required: false
      schema:
        type: string
    IfNoneMatch:
      description: |
        The RFC7232 If-None-Match header field in a request requires the server to only operate on the resource if it does not match 
        any of the provided entity-tags. If the provided entity-tag is `*`, it is required that the resource does not exist at all.
      example: '"c0d5809f-cbfa-4ce9-8b03-2231fee3e1ee", *'
      in: header
      name: If-None-Match
      required: false
      schema:
        type: string

  responses:
    304NotModified:
      description: Returns a Not Modified if the If-None-Match header matches the current ETag.
    429TooManyRequests:
      description: |
        Too many requests: A request may receive this error message instead of an response, if the server determined 
        to many requests need to be handled. Optionally the Server may include the 'Retry-After' Header with a value 
        based on seconds for an estimation when the client may try to restart the request."
      headers:
        Retry-After:
          schema:
            type: integer
            description: "Seconds"
