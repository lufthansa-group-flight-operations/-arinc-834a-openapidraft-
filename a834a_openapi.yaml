openapi: 3.0.3
info:
  title: ARINC 834A API
  description: Draft of Websocket upgrade API
  license:
    name: License Info
    url: https://example.com/license
  version: v0.0.5
servers:
  - url: https://a834a-0.suppliername.local/a834a/
tags:
  - name: 2.6.3 Protocol Switching
  - name: 3.2 Service Discovery
    description: Service Discovery
  - name: 4.0 Parameter Interfaces
  - name: 5.0 ACARS
    description: Aircraft Communication and Reporting System Messaging
  - name: 6.0 File Storage Management
  - name: 7.0 Flight Plan Data Management
paths:
  /adif/v1/subscribe:
    get:
      tags:
        - 2.6.3 Protocol Switching
      servers:
        - url: wss://a834a-1.suppliername.local/a834a/
      summary: |
        2.6.3.1 Protocol Switching - WebSockets NOTE: Need to be removed due to duplicate in OpenApi.
      parameters:
        - $ref: '#/components/parameters/WebSocketConnection'
        - $ref: '#/components/parameters/WebSocketUpgrade'
      responses:
        '101':
          $ref: '#/components/responses/WebSocket101'
        '400':
          $ref: '#/components/responses/WebSocket400'
        '501':
          $ref: '#/components/responses/RestApi501'
        '503':
          $ref: '#/components/responses/RestApi503'
  /stap/v1/:
    get:
      tags:
        - 2.6.3 Protocol Switching
      servers:
        - url: wss://a834a-1.suppliername.local/a834a/
      summary: |
        2.6.3.2 Protocol Switching - STAP
      parameters:
        - $ref: '#/components/parameters/WebSocketConnection'
        - $ref: '#/components/parameters/WebSocketUpgrade'
      responses:
        '101':
          $ref: '#/components/responses/WebSocket101'
        '400':
          $ref: '#/components/responses/WebSocket400'
        '501':
          $ref: '#/components/responses/RestApi501'
        '503':
          $ref: '#/components/responses/RestApi503'
  /adbp/v1/:
    get:
      tags:
        - 2.6.3 Protocol Switching
      servers:
        - url: wss://a834a-1.suppliername.local/a834a/
      summary: |
        2.6.3.3 Protocol Switching - ADBP
      parameters:
        - $ref: '#/components/parameters/WebSocketConnection'
        - $ref: '#/components/parameters/WebSocketUpgrade'
      responses:
        '101':
          $ref: '#/components/responses/WebSocket101'
        '400':
          $ref: '#/components/responses/WebSocket400'
        '501':
          $ref: '#/components/responses/RestApi501'
        '503':
          $ref: '#/components/responses/RestApi503'
  /{service}/v1/:
    get:
      tags:
        - 2.6.3 Protocol Switching
      servers:
        - url: wss://a834a-1.suppliername.local/a834a/
      summary: |
        2.6.3.4 Protocol Switching - Future Usages
      parameters:
        - in: path
          name: service
          description: Service on which a Websocket connection should be established.
          required: true
          schema:
            type: string
          example: null
        - $ref: '#/components/parameters/WebSocketConnection'
        - $ref: '#/components/parameters/WebSocketUpgrade'
      responses:
        '101':
          $ref: '#/components/responses/WebSocket101'
        '400':
          $ref: '#/components/responses/WebSocket400'
        '501':
          $ref: '#/components/responses/RestApi501'
        '503':
          $ref: '#/components/responses/RestApi503'
  /services/:
    get:
      tags:
        - 3.2 Service Discovery
      summary: 3.2. Get a list of services
      description: An ARINC 834A server should provide a Service Discovery function enabling connected clients to discover the supported service(s).
      responses:
        '200':
          description: The server should response by providing the list of supported services and optional description field (free content field based on string)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/3.2.Services'
        '500':
          $ref: '#/components/responses/RestApi500'
        '501':
          $ref: '#/components/responses/RestApi501'
        '503':
          $ref: '#/components/responses/RestApi503'
  /nas/v1/:
    get:
      tags:
        - 6.0 File Storage Management
      summary: Retrieve identified root folder
      parameters:
        - $ref: '#/components/parameters/NasDetailed'
      operationId: getRoot
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/7.0.PathListDetailed'

                  - $ref: '#/components/schemas/7.0.PathList'
        '400':
          $ref: '#/components/responses/RestApi400'
        #'401':
        #  $ref: '#/components/responses/RestApi401'
        #'403':
        #  $ref: '#/components/responses/RestApi403'
        '404':
          $ref: '#/components/responses/RestApi404'
        '501':
          $ref: '#/components/responses/RestApi501'
  /nas/v1/{path}:
    get:
      tags:
        - 6.0 File Storage Management
      summary: Retrieve identified folder/file
      operationId: getItem
      parameters:
        - name: path
          in: path
          description: Path
          required: true
          schema:
            type: string
            pattern: ^[a-zA-Z0-9-._~!$&()*+,;=:/?@]+$
        - $ref: '#/components/parameters/NasDetailed'
      responses:
        '200':
          description: |
            When the query path is a folder type then an `application/json` with the path list is returned.
            When the query path is a file type then an `application/octet-stream` with
            the `Content-Disposition` header and the file content as body is returned.
          headers:
            Content-Disposition:
              description: |
                Content-Disposition is provided in case the path belongs to a file type.<br/>
                Example: `Content-Disposition: attachment; filename=README.txt`
              schema:
                type: string
              example: attachment; filename=README.txt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/7.0.PathListDetailed'
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/RestApi400'
        #'401':
        #  $ref: '#/components/responses/RestApi401'
        #'403':
        #  $ref: '#/components/responses/RestApi403'
        '404':
          $ref: '#/components/responses/RestApi404'
        '500':
          $ref: '#/components/responses/RestApi500'
        '501':
          $ref: '#/components/responses/RestApi501'
    put:
      tags:
        - 6.0 File Storage Management
      summary: Create/Update folder/file
      operationId: createItem
      parameters:
        - name: path
          in: path
          description: Path
          required: true
          schema:
            type: string
            pattern: ^[a-zA-Z0-9-._~!$&()*+,;=:/?@]+$
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
        required: false
      responses:
        '201':
          #$ref: '#/components/responses/RestApi201'
          description: created
          content: {}
        '204':
          $ref: '#/components/responses/RestApi204'
        '400':
          $ref: '#/components/responses/RestApi400'
        #'401':
        #  $ref: '#/components/responses/RestApi401'
        #'403':
        #  $ref: '#/components/responses/RestApi403'
        '500':
          $ref: '#/components/responses/RestApi500'
        '501':
          $ref: '#/components/responses/RestApi501'
        #'507':
          #$ref: '#/components/responses/RestApi507'
    delete:
      tags:
        - 6.0 File Storage Management
      summary: Delete folder/file
      operationId: deleteItem
      parameters:
        - name: path
          in: path
          description: Path
          required: true
          schema:
            type: string
            pattern: ^[a-zA-Z0-9-._~!$&()*+,;=:/?@]+$
      responses:
        '204':
          $ref: '#/components/responses/RestApi204'
        '400':
          $ref: '#/components/responses/RestApi400'
        #'401':
        #  $ref: '#/components/responses/RestApi401'
        #'403':
        #  $ref: '#/components/responses/RestApi403'
        '404':
          $ref: '#/components/responses/RestApi404'
        '500':
          $ref: '#/components/responses/RestApi500'
        '501':
           $ref: '#/components/responses/RestApi501'
  /adif/v1/parameters:
    get:
      tags:
        - 4.0 Parameter Interfaces
      summary: 4.3.2 Parameter Synchronous request API
      description: The ARINC 834A server should allow connected clients to retrieve valid parameters using the following REST commands.
      operationId: getParameters
      parameters:
        - in: query
          name: params
          required: false
          schema:
            type: string
            minimum: 0
          description: |
            The list of parameters which a client want to retrieve. Values should be set as a comma separated list within the path following the query "?params=".
            <br/>If no query is provided, a list of all available/known parameters is returned with the settable property and without values.
            <br> To retrieve a list of all parameters with their values, use query <b>?params=*</b>
            <br>To reduce required resources on both client and server, the client should use this function with caution.
            <br/>For multiple parameters request, the parameters should be provided as a comma separated list.
          examples:
            listAvailableParameters:
              summary: Example of list of available parameters request
            singleParameter:
              summary: Example of single parameter request
              value: time_utc
            multipleParameter:
              summary: Example of multiple parameters request
              value: date_utc,time_utc
            allParameter:
              summary: Example of all parameters request
              value: '*'
      responses:
        '200':
          description: |
            OK: The server should return the requested parameters formatted with applicable JSON schema.
            Without the `params=xxx` the server only returns the name and the settable flag without values.
            To retrieve all parameters with values use the `*` as query parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4.1.4.4.A834AParameters'
              examples:
                listAvailableParameters:
                  summary: List all parameters
                  value:
                    parameters:
                      - name: date_utc
                        settable: false
                      - name: time_utc
                        settable: false
                singleParameter:
                  summary: Example of single parameter request
                  value:
                    parameters:
                      - name: date_utc
                        timestamp: 2022-04-21T18:45:15.456Z
                        value: 2022-04-21
                multipleParameter:
                  summary: Example of multiple parameters request
                  value:
                    parameters:
                      - name: date_utc
                        timestamp: 2022-04-21T18:45:15.456Z
                        value: 2022-04-21
                      - name: time_utc
                        timestamp: 2022-04-21T18:45:15.456Z
                        value: 18:45:15
                allParameter:
                  summary: Example of all parameters request
                  value:
                    parameters:
                      - name: ac_type
                        timestamp: 2022-04-21T18:45:14.456Z
                        value: A359
                      - name: date_utc
                        timestamp: 2022-04-21T18:45:15.456Z
                        value: 2022-04-21
                      - name: time_utc
                        timestamp: 2022-04-21T18:45:15.456Z
                        value: 18:45:15
        '403':
          description: |
            Forbidden: On an item that is not allowed for modification, the server should report error message 403 (Forbidden) with the
            list of rejected parameters as follows.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4.1.4.4.ErrorResponse'
              example:
                error: parameter not modifiable
                parameters:
                  - parameter
        '404':
          description: |
            Not Found: If none parameter of the request could be found it should be answered with code 404 (Not Found). The name of
            the unknown parameter should be reported in the error message as follows.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4.1.4.4.ErrorResponse'
              example:
                error: parameter not found
                parameters:
                  - parameter
        '429':
          $ref: '#/components/responses/RestApi429'
        '501':
          $ref: '#/components/responses/RestApi501'
        '502':
          $ref: '#/components/responses/RestApi502'
        '503':
          $ref: '#/components/responses/RestApi503'
  /adif/v1/parameters/{paramname}:
    get:
      tags:
        - 4.0 Parameter Interfaces
      operationId: getParameterById
      parameters:
        - in: path
          name: paramname
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '501':
          $ref: '#/components/responses/RestApi501'
  /adif/v1/subscription:
    get:
      tags:
        - 2.6.3 Protocol Switching
      servers:
        - url: wss://a834a-1.suppliername.local/a834a/
      summary: '2.1.1 Protocol Switching - WebSockets NOTE: Need to be removed due to duplicate in openapi.'
      parameters:
        - in: header
          name: Connection
          schema:
            type: string
            enum:
              - Upgrade
          required: true
        - in: header
          name: Upgrade
          schema:
            type: string
            enum:
              - websocket
          required: true
      responses:
        '101':
          description: Switching Protocols to Websocket.
          headers:
            Connection:
              schema:
                type: string
            Upgrade:
              schema:
                type: string
                enum:
                  - websocket
            Sec-WebSocket-Accept:
              schema:
                type: object
          content: {}
        '400':
          description: Resource can only be accessed with WebSockets.
          content:
            text/plain:
              schema:
                type: string
                example: Resource can only be access with WebSockets.
        '500':
          $ref: '#/components/responses/RestApi500'
        '501':
          $ref: '#/components/responses/RestApi501'
  /xadif/v1/parameters:
    put:
      tags:
        - 4.0 Parameter Interfaces
      summary: 4.3.3 Parameter REST Set API.
      description: |
        The ARINC 834A supports also the “Write Parameter” feature. This is applicable only to specific services as detailed
        in this document. As such this function is optional since only ADIF function is mandatory for ARINC 834A.
      requestBody:
        description: Multiple parameters may be Set with a single request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/4.1.4.3.WriteParameters'
      responses:
        '200':
          description: 'OK: The server should return the requested parameters formatted with applicable JSON schema.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4.1.4.4.A834AParameters'
              example:
                - name: Parametername1
                  timestamp: 1000
                  value: xxx
                  settable: true
                - name: Parametername2
                  tiemstamp: 1000
                  value: xxx
                  settable: true
        '403':
          description: |
            Forbidden: On an item that is not allowed for modification, the server should report error message 403 (Forbidden) with
            the list of rejected parameters as follows.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4.1.4.4.ErrorResponse'
              example:
                error: parameter not modifiable
                parameters:
                  - hdg_mag
                  - tas
        '404':
          description: |
            Not Found: Non-Existent parameter should be answered with code 404 (Not Found). The name of the unknown parameter
            should be reported in the error message as follows.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/4.1.4.4.ErrorResponse'
              example:
                error: parameter not found
                parameters:
                  - fuel_price
                  - coffee_temperature
        '429':
          $ref: '#/components/responses/RestApi429'
        '501':
          $ref: '#/components/responses/RestApi501'
        '502':
          $ref: '#/components/responses/RestApi502'
        '503':
          $ref: '#/components/responses/RestApi503'
  /acars/v1/uplinks:
    get:
      tags:
        - 5.0 ACARS
      summary: 5.3.1 Get a list of all Uplinks
      description: Retrieve uplinks which matches the filter criteria or all uplinks when no filter is provided.
      operationId: getAllUplinks
      parameters:
        - $ref: '#/components/parameters/IncludePayload'
        - $ref: '#/components/parameters/IfNoneMatch'
        - in: query
          name: mti
          description: Filter by MTI (Message Type Identifier) to address specific applications.
          schema:
            type: string
            maxLength: 2
            minLength: 2
      responses:
        '200':
          description: Returns a list of matching uplinks or an empty list when no uplinks are found.
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/5.2.UplinkList'
        '304':
          $ref: '#/components/responses/RestApi304'
        '501':
          $ref: '#/components/responses/RestApi501'
    delete:
      tags:
        - 5.0 ACARS
      summary: 5.3.3 Delete all Uplinks
      description: Delete uplinks which matches the filter criteria or all uplinks when no filter is provided.
      operationId: deleteAllUplinks
      parameters:
        - in: query
          name: mti
          description: Filter by MTI (Message Type Identifier) to address specific applications.
          schema:
            type: string
            maxLength: 2
            minLength: 2
      responses:
        '204':
          description: Successful operation
        '501':
          $ref: '#/components/responses/RestApi501'
  /acars/v1/uplinks/{id}:
    get:
      tags:
        - 5.0 ACARS
      summary: 5.3.2 Get a specific Uplink
      description: Retrieve an uplink for the given id.
      operationId: getUplinkById
      parameters:
        - name: id
          in: path
          description: Unique id which identifies an uplink.
          required: true
          schema:
            type: integer
            format: int64
        - include_payload:
          $ref: '#/components/parameters/IncludePayload'
      responses:
        '200':
          description: Return the uplink with the specified id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/5.2.Uplink'
        '404':
          $ref: '#/components/responses/RestApi404'
        '501':
          $ref: '#/components/responses/RestApi501'
    delete:
      tags:
        - 5.0 ACARS
      summary: 5.3.4 Delete a specific Uplink
      description: Delete an uplink for the given id.
      operationId: deleteUplinkById
      parameters:
        - name: id
          in: path
          description: Unique id which identifies an uplink.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Uplink successfully deleted.
        '404':
          $ref: '#/components/responses/RestApi404'
        '501':
          $ref: '#/components/responses/RestApi501'
  /acars/v1/downlinks:
    get:
      tags:
        - 5.0 ACARS
      summary: 5.3.5 Get a list of all Downlinks
      description: Retrieve downlinks which matches the filter criteria or all downlinks when no filter is provided.
      operationId: getAllDownlinks
      parameters:
        - $ref: '#/components/parameters/IncludePayload'
        - $ref: '#/components/parameters/IfNoneMatch'
        - in: query
          name: mti
          description: Filter by MTI (Message Type Identifier) to address specific applications.
          schema:
            type: string
            maxLength: 2
            minLength: 2
      responses:
        '200':
          description: Returns a list of matching downlinks or an empty list when no downlinks are found.
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/5.2.DownlinkList'
        '304':
          $ref: '#/components/responses/RestApi304'
        '501':
          $ref: '#/components/responses/RestApi501'
    post:
      tags:
        - 5.0 ACARS
      summary: 5.3.7 Create a new Downlink
      description: Creates a new downlink request.
      operationId: createDownlink
      requestBody:
        description: Downlink to be created.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/5.2.Downlink'
            example:
              mti: FT
              mediaSelect: acars_any
              lifetime: 0
              data_type: ASCII
              payload: "Free Text: Testmessage"
      responses:
        '201':
          description: Downlink request successfully created. Returns the newly created downlink.
          headers:
            Location:
              description: Contains the URI to the newly created downlink.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/5.2.Downlink'
        '400':
          $ref: '#/components/responses/RestApi400'
        '429':
          description: Too many requests - is returned, if the downlink queue in the A834A server has no space left.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              example:
                error: Downlink queue full
        '501':
          $ref: '#/components/responses/RestApi501'
    delete:
      tags:
        - 5.0 ACARS
      summary: 5.3.8 Delete all Downlinks
      description: |
        Delete downlinks which matches the filter criteria or all downlinks when no filter is provided. The delete command only deletes
        the message(s) on the 834A server. If the message is in the state 'queued', meaning it has not been transferred to CMF, the message
        will be deleted before it has been sent to ground. Otherwise, if the message is transferring, or was already transferred to the
        CMF, the CMF will send the message to ground anyway and the message will only be deleted on the 834A Server.
      operationId: deleteAllDownlinks
      parameters:
        - in: query
          name: mti
          description: Filter by MTI (Message Type Identifier) to address specific applications.
          schema:
            type: string
            maxLength: 2
            minLength: 2
      responses:
        '204':
          description: Successful operation
        '501':
          $ref: '#/components/responses/RestApi501'
  /acars/v1/downlinks/{id}:
    get:
      tags:
        - 5.0 ACARS
      summary: 5.3.6 Get a specific Downlink
      description: Retrieve a downlinks for the given id.
      operationId: getDownlinkById
      parameters:
        - $ref: '#/components/parameters/IfNoneMatch'
        - name: id
          in: path
          description: Unique id which identifies a downlink.
          required: true
          schema:
            type: integer
            format: int64
        - include_payload:
          $ref: '#/components/parameters/IncludePayload'
      responses:
        '200':
          description: Return the downlink with the specified id.
          headers:
            ETag:
              $ref: '#/components/headers/ETag'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/5.2.Downlink'
        '304':
          $ref: '#/components/responses/RestApi304'
        '404':
          $ref: '#/components/responses/RestApi404'
        '501':
          $ref: '#/components/responses/RestApi501'
    delete:
      tags:
        - 5.0 ACARS
      summary: 5.3.9 Delete a specific Downlink
      description: Delete a downlink for the given id.
      operationId: deleteDownlinkById
      parameters:
        - name: id
          in: path
          description: Unique id which identifies a downlink.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Downlink successfully deleted.
        '404':
          $ref: '#/components/responses/RestApi404'
        '501':
          $ref: '#/components/responses/RestApi501'
  /acars/v1/status:
    get:
      tags:
        - 5.0 ACARS
      summary: "5.3.10 Get the status of the channels"
      description: Retrieve the status of all communication channels.
      operationId: getChannelStatus
      responses:
        '200':
          description: Returns the status object for the communication channels.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/5.2.Status'
        '501':
          $ref: '#/components/responses/RestApi501'

  /acars/v1/subscribe:
    get:
      tags:
        - 5.0 ACARS
      servers:
        - url: wss://a834a-1.suppliername.local/a834a/
      summary: 5.4 WebSocket Upgrade
      description: Note this is WSS not HTTP and is an UPGRADE not a POST
      operationId: subscribeAcarsNotifications
      parameters:
        - in: header
          name: Connection
          schema:
            type: string
            enum:
              - Upgrade
          required: true
        - in: header
          name: Upgrade
          schema:
            type: string
            enum:
              - websocket
          required: true
        - in: header
          name: Sec-WebSocket-Version
          schema:
            type: integer
            enum:
              - 13
          required: true
        - in: header
          name: Sec-WebSocket-Key
          schema:
            type: string
            pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
            format: base64
          required: true
        - in: header
          name: Sec-WebSocket-Protocol
          schema:
            type: string
            enum:
              - acars-1
          required: true
      responses:
        '101':
          description: Switching Protocols to Websocket.
          headers:
            Connection:
              schema:
                type: string
            Upgrade:
              schema:
                type: string
                enum:
                  - websocket
            Sec-WebSocket-Accept:
              schema:
                type: string
                pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                format: base64
            Sec-WebSocket-Protocol:
              schema:
                type: string
                enum:
                  - acars-1
          content: {}
        '400':
          description: Resource can only be accessed with WebSockets.
          content:
            text/plain:
              schema:
                type: string
                example: Resource can only be access with WebSockets.
        '501':
          $ref: '#/components/responses/RestApi501'
  /fms/v1/flightPlan:
    get:
      tags:
        - 7.0 Flight Plan Data Management
      summary: 8.x TODO
      description: Retrieve current FMS flight plan.
      operationId: getFmsFlightPlan
      responses:
        '200':
          description: Returns the FMS flight plan.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/7.0.FmsFlightPlan'
        '501':
          $ref: '#/components/responses/RestApi501'
components:
  schemas:
    selfLink:
      description: A URL that can be used to access the resource again.
      type: string
      readOnly: true
    selfLinkWithUniqueId:
      description: |
        A URL that can be used to access the resource again. The last element in the url represents the id of the message. It is an
        abstract that represents kind of uniqueness over livetime and over different AIDS and different Aircraft. A UUID would fullfill
        that requirement. The client should not make any assumptions of previous or following messages by altering the ID. Instead the
        client should request a list of messages.
      type: string
      readOnly: true
    ISO8601TimeStamp:
      description: Test
      type: string
      example: 2022-04-21T18:45:15.456Z
    ErrorMessage:
      type: object
      description: Error message that gives additional info about the error.
      properties:
        error:
          type: string
          description: additional info about the error.
    3.2.Services:
      type: object
      properties:
        services:
          type: array
          items:
            type: object
            description: Describes the A834a services available on the server.
            minItems: 0
            properties:
              service:
                type: string
                pattern: ^[a-zA-Z0-9][a-zA-Z0-9_.]*$
              description:
                type: string
              versions:
                type: array
                items:
                  description: |
                    Version supported by the A834A. Authenticate has to be set to true if HTTP Basic Authentication is required for that
                    service.
                  type: object
                  properties:
                    version:
                      type: string
                      pattern: ^v[0-9]+$
                    uri:
                      type: string
                    authenticate:
                      type: boolean
                      default: false
                  minItems: 1
      example:
        services:
          - service: adif
            description: Avionics Parameters
            versions:
              - version: v1
                uri_http: https://aid.supplier.local/a834a/adif/v1
                uri_wss: wss://aid.supplier.local/a834a/adif/v1
                authenticate: false
              - version: v2
                uri_http: https://aid.supplier.local/a834a/adif/v2
                uri_wss: wss://aid.supplier.local/a834a/adif/v2
                authenticate: false
          - service: nas
            description: Network Attached Storage
            versions:
              - version: v1
                uri_http: https://aid.supplier.local/a834a/nas/v1
                authenticate: true
              - version: v2
                uri_http: https://aid.supplier.local/a834a/nas/v2
                authenticate: true
    4.1.3.timestamp:
      description: |
        Time in milliseconds based on a monotonic clock (arbitrary fixed point in the past; is not affected by
        changes in the system time-of-day clock). This is the time of the last modification of the value of the parameter.
      type: integer
      format: int64
    UnknownParameters:
      type: object
      properties:
        unknownParameters:
          type: array
          items:
            $ref: '#/components/schemas/parameterName'
            minItems: 1
          example:
            - fuel_price
            - coffee_temperature
    4.4.1.A834AParametersListing:
      type: object
      properties:
        parameters:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/4.1.4.4.A834AParameterListItem'
      example:
        - name: date_utc
          settable: false
        - name: time_utc
          settable: false
    4.1.4.3.WriteParameters:
      type: object
      properties:
        parameters:
          type: array
          items:
            type: object
            properties:
              name:
                $ref: '#/components/schemas/parameterName'
              timestamp:
                $ref: '#/components/schemas/4.1.3.timestamp'
              value: {}
            minItems: 1
    4.1.4.4.A834AParameters:
      description: Schema for A834 parameter array version.
      type: object
      required:
        - parameters
      properties:
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/4.1.4.4.A834AParameter'
    4.1.4.4.A834AParameter:
      description: Schema for A834A parameter version 1.0.2
      type: object
      properties:
        name:
          $ref: '#/components/schemas/parameterName'
        timestamp:
          $ref: '#/components/schemas/ISO8601TimeStamp'
        value:
          type: object
          description: |
            Which type is strictly defined in the JSON schema (e.g., kg, knots, degrees, complex type, etc.). 'value' is set to
            null (JSON datatype) when the parameter is not valid (that is to say for in the A429 case: not in "NO")
            "settable"(boolean) by default all parameters for public ARINC 834A ADIF service cannot be
            set by a client.
        settable:
          type: boolean
          description: by default all parameters for public ARINC 834A ADIF service cannot be set by a client.
          default: false
    4.1.4.4.A834AParameterListItem:
      description: Schema for A834A parameter version 1.0.2
      type: object
      required:
        - name
        - settable
      properties:
        name:
          $ref: '#/components/schemas/parameterName'
        settable:
          type: boolean
          description: by default all parameters for public ARINC 834A ADIF service cannot be set by a client.
          default: false
      example:
        name: date_utc
        settable: false
    4.1.4.4.ErrorResponse:
      type: object
      properties:
        error:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/parameterName'
      example:
        error: ErrorMessage
        parameters:
          - fuel_price
          - coffee_temperature
    4.1.5.1.WebSocketSubscription:
      type: object
      properties:
        NOTE:
          type: string
          example: 'TODO: OPEN ITEM'
    5.2.MessagePayload:
      description: |
        Payload of the message. Currently ASCII only. Mandatory in POST command. Optional, if "include_content" is set in the
        query for the GET request, the payload will be delivered.
      type: string
    5.2.PayloadDataType:
      description: |
        Describes the format of the data in payload. Currently only ASCII is supported. Optional field, if not set ASCII is assumed.
      type: string
      minimum: 0
      maximum: 1
      enum:
        - ASCII
      default: ASCII
    5.2.LifeTime:
      description: |
        Time after which the message gets discarded. The pattern of the value is according A619, but with the diference, that the
        timer restarts at each unit. In particular it means that the timer starts when the message is received by the ACARS Service
        on the A834A and if the message did not timeout until the transfer to the CMU, that value is passed unaltered towards the
        CMU. The A834A-Service should not modify the value by the time it hold on the message.
      multipleOf: 2
      maximum: 30
      minimum: 0
      type: integer
    5.2.TimeStamp:
      description: Time stamp (RFC3339 format) when the message was received by the A834A Server.
      type: string
      format: date-time
      readOnly: true
      example: 2022-04-21T18:45:15.456Z
    5.2.DataSize:
      description: Size of the data in bytes.
      minimum: 1
      type: integer
      readOnly: true
    5.2.DownlinkState:
        description: State of the queued downlink message.
        type: string
        enum:
          - queued
          - timeout
          - cmf_transfer
          - cmf_ack
          - cmf_nak
          - cmf_timeout
          - dsp_ack
    5.2.UplinkList:
      type: object
      properties:
        selfLink:
          $ref: '#/components/schemas/selfLink'
        uplinks:
          description: List of uplinks.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/5.2.Uplink'
      example:
        selfLink: https://server/a834a/acars/v1/uplinks
        uplinks:
          - selfLink: https://server/a834a/acars/v1/uplinks/90ad2e56-aa8c-49dc-a1aa-028379c011c4
            timestamp: 2022-04-21T17:55:35.321Z
            mti: AO
            lifetime: 10
            data_type: ASCII
            dataSize: 22
            data: Hello World Free Text.
          - selfLink: https://server/a834a/acars/v1/uplinks/240be703-012b-4442-ab38-405616baf625
            timestamp: 2022-04-21T18:45:15.456Z
            mti: WX
            lifetime: 0
            data_type: ASCII
            dataSize: 82
            data: METAR KSTF 211651Z 01005KT 10SM FEW020 BKN250 19/12 A3026 RMK AO2 SLP244 T01890117
    5.2.Uplink:
      type: object
      properties:
        selflink:
          $ref: '#/components/schemas/selfLinkWithUniqueId'
        timestamp:
          $ref: '#/components/schemas/5.2.TimeStamp'
        mti:
          description: Message Type Identifier to address specific applications.
          type: string
          minLength: 2
          maxLength: 2
        lifetime:
          $ref: '#/components/schemas/5.2.LifeTime'
        data_type:
          $ref: '#/components/schemas/5.2.PayloadDataType'
        data_size:
          $ref: '#/components/schemas/5.2.DataSize'
        payload:
          $ref: '#/components/schemas/5.2.MessagePayload'
      example:
        selflink: https://server/a834a/acars/v1/uplinks/240be703-012b-4442-ab38-405616baf625
        timestamp: 2022-04-21T18:45:15.456Z
        mti: WX
        lifetime: 0
        data_type: ASCII
        data_size: 82
        payload: METAR KSTL 211651Z 01005KT 10SM FEW020 BKN250 19/12 A3026 RMK AO2 SLP244 T01890117
    5.2.DownlinkList:
      type: object
      properties:
        selfLink:
          $ref: '#/components/schemas/selfLink'
        downlinks:
          description: List of downlinks.
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/5.2.Downlink'
      example:
        selfLink: https://server/a834a/acars/v1/downlinks
        downlinks:
          - selflink: https://server/a834a/acars/v1/downlinks/127ade54-8458-4d01-b94f-5f9216838f1f
            timestamp: 2022-04-21T17:55:35.321Z
            state: dsp_ack
            status_update_timestamp: 2022-04-21T17:55:36.000Z
            mti: AO
            media_select: ACARS_ANY
            lifetime: 0
            data_type: ASCII
            data_size: 32
            payload: Hello World Free Text.
          - selflink: https://server/a834a/acars/v1/downlinks/5eb2e8cd-a853-4d7a-bdd4-2a45f8ebbeb7
            timestamp: 2022-04-21T18:45:15.456Z
            state: cmf_ack
            status_update_timestamp: 2022-04-21T18:45:15.500Z
            mti: WX
            media_select: ACARS_ANY
            lifetime: 0
            data_type: ASCII
            data_size: 19
            payload: REQ METAR MSCH KSTF
    5.2.Downlink:
      type: object
      properties:
        selflink:
          $ref: '#/components/schemas/selfLinkWithUniqueId'
          readOnly: true
        timestamp:
          $ref: '#/components/schemas/5.2.TimeStamp'
          readOnly: true
        state:
          $ref: '#/components/schemas/5.2.DownlinkState'
          readOnly: true
        status_update_timestamp:
          description: Time stamp (RFC3339 format) indicating when the last 'state' change took place.
          type: string
          format: date-time
          readOnly: true
        mti:
          description: Message Type Identifier to address specific applications.
          type: string
          minLength: 2
          maxLength: 2
          example: WX
        media_select:
          description: Allowed media channels to use.
          type: string
          enum:
            - acars_any
            - acars_vhf
            - acars_satcom
            - acars_fms
        lifetime:
          $ref: '#/components/schemas/5.2.LifeTime'
        data_type:
          $ref: '#/components/schemas/5.2.PayloadDataType'
        data_size:
          $ref: '#/components/schemas/5.2.DataSize'
          readOnly: true
        payload:
          $ref: '#/components/schemas/5.2.MessagePayload'
      example:
        selflink: https://server/a834a/acars/v1/downlinks/5eb2e8cd-a853-4d7a-bdd4-2a45f8ebbeb7
        timestamp: 2022-04-21T18:45:15.456Z
        state: cmf_transfer
        status_update_timestamp: '2022-04-21T18:45:15.500Z'
        mti: WX
        media_select: ACARS_ANY
        lifetime: 0
        data_type: ASCII
        data_size: 19
        payload: REQ METAR MSCH KSTF
    5.2.Status:
      type: object
      properties:
        selflink:
          $ref: '#/components/schemas/selfLink'
          example: https://server/a834a/acars/v1/status
        updated:
          description: Timestamp when the information was updated.
          type: string
          format: date-time
        cmf_connected:
          description: |
            Indicates if the ACARS messaging service on the A834A server has established a connection to the cmf unit. (i.e. via ARINC 429)
          type: boolean
          example: true
        cmf_status:
          description: Indicates the health status of the CMF as broadcasted by the unit. (Label 270, !Bit16)
          type: boolean
          example: true
        is_any_avail:
          description: Indicates whether any communication channel is available.
          type: boolean
          example: true
        channels:
          description: List of all communication channels and the corresponding state.
          type: array
          items:
            type: object
            properties:
              name:
                description: Name of the communication channel.
                type: string
              is_avail:
                description: Indicates whether the channel is available or not.
                type: boolean
          example:
            - name: acars_vhf
              is_avail: true
            - name: acars_hf
              is_avail: false
            - name: acars_satcom
              is_avail: true
            - name: acars_fms
              is_avail: false
    7.0.PathList:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              selflink:
                type: string
              name:
                type: string
              path_type:
                type: string
                enum:
                  - folder
                  - file
            required:
              - selflink
              - name
              - pathtype
      example:
        items:
          - selflink: https://a834a-1.suppliername.local/a834a/v1/nas/eTLB
            name: eTLB
            path_type: folder
          - selflink: https://a834a-1.suppliername.local/a834a/v1/nas/Temp
            name: Temp
            path_type: folder
          - selflink: https://a834a-1.suppliername.local/a834a/nas/v1/README.txt
            path: README.txt
            path_type: file
    7.0.PathListDetailed:
      type: object
      properties:
        items:
          type: object
          properties:
            selflink:
              type: string
            name:
              type: string
            path_type:
              type: string
              enum:
                - folder
                - file
            last_modified_timestamp:
              type: string
              format: date-time
            filesize:
              type: integer
            writable:
              type: boolean
            deletable:
              type: boolean
            quota_total:
              type: integer
            quota_available:
              type: integer
            quota_used:
              type: integer
          required:
            - selflink
            - name
            - path_type
            - filesize
            - last_modified_timestamp
            - writable
            - deletable
            - quota_total
            - quota_available
            - quota_used
      example:
        items:
          - selflink: https://a834a-1.suppliername.local/a834a/v1/nas/eTLB
            name: eTLB
            path_type: folder
            filesize: 0
            last_modified_timestamp: "2022-11-07T09:52:02.000Z"
            writable: 'true'
            deletable: 'true'
            quota_total: 100000000
            quota_available: 99000000
            quota_used: 1000000
          - selflink: https://a834a-1.suppliername.local/a834a/v1/nas/Temp
            name: Temp
            path_type: folder
            filesize: 0
            last_modified_timestamp: "2022-11-07T09:52:02.000Z"
            writable: 'true'
            deletable: 'true'
            quota_total: 100000000
            quota_available: 99000000
            quota_used: 1000000
          - selflink: https://a834a-1.suppliername.local/a834a/nas/v1/README.txt
            path: README.txt
            path_type: file
            filesize: 10
            last_modified_timestamp: "2022-11-07T09:52:02.000Z"
            writable: 'true'
            deletable: 'true'

    7.0.FmsFlightPlan:
      type: object
      properties:
        name:
          description: TODO
          type: string
          example: FMSTrajectory
        source:
          description: |
            Protocol version of the bus.
            IntBusV1: ARINC 702A-1 (5.2.12.2)
            IntBusV2-4: ARINC 702A-2-4 (5.2.12.2)
            IntBusV5: ARINC 702A-5 (5.2.12.2)
            GAMA: TODO
            EPP: DO-350A/351A - ED-228A/229A
          type: string
          enum:
          - IntBusV1
          - IntBusV2-4
          - IntBusV5
          - GAMA
          - EPP
          example: IntBusV5
        timestamp:
          description: |
            Time of Trajectory Prediction. (RFC3339 date-time)
          type: string
          format: date-time
          example: 2023-01-18T12:00:00Z
        utc:
          description: |
            Current system time. (RFC3339 date-time)
          type: string
          format: date-time
          example: 2023-01-18T12:00:00Z
        value:
          description: TODO
          type: object
          properties:
            departure_airport:
              description: |
                TODO
                ICAO + IATA Code?
              type: string
              pattern: ^[A-Z]{3,4}$
              example: LFBO
            destination_airport:
              description: |
                TODO
                ICAO + IATA Code?
              type: string
              pattern: ^[A-Z]{3,4}$
              example: LFLX
            distance_to_destination:
              description: |
                TODO
                Distance in nautical miles.
              type: number
              minimum: 0
              example: 123.5
            time_to_destination:
              description: |
                TODO
                Time in seconds or as RFC3339 Duration f.e. "PT00H15M00S"?
              type: string
              example: PT00H15M00S
            points:
              description: TODO
              type: array
              items:
                $ref: '#/components/schemas/7.0.FmsPoint'

    7.0.FmsPoint:
      type: object
      properties:
        latitude:
          description: |
            Latitude in decimal degrees.
          type: number
          minimum: -90
          maximum: 90
          example: 45.8505556
        longitude:
          description: |
            Longitude in decimal degrees.
          type: number
          minimum: -180
          maximum: 180
          example: 1.7486111111111
        name:
          description: |
            TODO
            Remark: optional, don't expect a value.
          type: string
          example: ABUSO
        characteristics:
          description: |
            TODO
          type: array
          items:
            type: string
            enum:
              - start_of_climb
              - top_of_climb
              - top_of_descent
              - end_of_descent
              - start_of_descent
              - runway
              - level-off_start
              - level-off_end
              - aircraft_projection
              - discontinuity
              - non-flyable
              - clearance_altitude_level-off
              - unnamed_fix
              - baro-ref_climb_baro_setting
              - baro-ref_descent_baro_setting
              - baro-ref_std
              - crossover_altitude
              - transition_altitude-level
              - speed_change
          example: [start_of_climb, off_start]
        altitude:
          description: |
            Altitude in feet.
          type: integer
          example: 32000
        speed:
          description: |
            Speed in MACH if value < 2 or KCAS ≥ 2.
          type: number
          minimum: 0
          example: 145.3
        eta:
          description: |
            Estimated time of arrival. (RFC3339 date-time)
          type: string
          format: date-time
          example: 2023-01-18T12:05:30Z
        fuel:
          description: |
            Fuel TODO in KLBS.
          type: number
          example: 12540.6
        temperature:
          description: |
            Temperature (which?) in degress celsius.
          type: number
          example: -50.6
        wind_speed:
          description: |
            Wind speed in knots.
          type: number
          example: 235.7
        wind_direction:
          description: |
            Wind direction in decimal degree.
          type: number
          minimum: 0
          maximum: 360
          example: 340.6
        constraints:
          description: TODO
          type: object
          properties:
            altitude_upper_bound:
              description: |
                Altitude upper bound in feet.
              type: integer
              example: 12000
            altitude_lower_bound:
              description: |
                Altitude lower bound in feet.
              type: integer
              example: 13000
            speed_type:
              description: TODO
              type: string
              enum:
                - at_or_below
                - at
                - at_or_above
            speed_value:
              description: TODO in knots.
              type: integer
              example: 123
            time_type:
              description: TODO
              type: string
              enum:
                - at_or_below
                - at
                - at_or_above
              example: at_or_above
            time_value:
              description: TODO in seconds
              type: integer
              example: 1234

    parameterName:
      type: string
      description: Name of a parameter, please note that '.' are used for namespaces.
      pattern: ^([A-Za-z0-9_]+.)?[A-Za-z0-9_]+$
      example: AirlineID
  parameters:
    IncludePayload:
      description: |
        Optional parameter, if set to true, the response will have the payload included. Otherwise the payload is not sent. If
        not set, the default is false. If the client is only checking for updates of messages, it should request without the
        payload and use the ETAG as an indicator if messages has changed. The ETAG should be the same, independed if the payload
        is requested.
      in: query
      name: include_payload
      required: false
      schema:
        type: boolean
    IfMatch:
      description: |
        The RFC7232 If-Match header field in a request requires the server to only operate on the resource that matches at least
        one of the provided entity-tags. This allows clients express a precondition that prevent the method from being applied
        if there have been any changes to the resource.
      example: '"42", "c0d5809f-cbfa-4ce9-8b03-2231fee3e1ee"'
      in: header
      name: If-Match
      required: false
      schema:
        type: string
    IfNoneMatch:
      description: |
        The RFC7232 If-None-Match header field in a request requires the server to only operate on the resource if it does not match
        any of the provided entity-tags. If the provided entity-tag is `*`, it is required that the resource does not exist at all.
      example: '"c0d5809f-cbfa-4ce9-8b03-2231fee3e1ee", *'
      in: header
      name: If-None-Match
      required: false
      schema:
        type: string
    WebSocketConnection:
      in: header
      name: Connection
      schema:
        type: string
        enum:
          - Upgrade
      required: true
    WebSocketUpgrade:
      in: header
      name: Upgrade
      schema:
        type: string
        enum:
          - websocket
      required: true
    NasDetailed:
      name: detailed
      description: |
        If the client requests additional detail using the optional parameter 'detailed' with the value 'true' within the
        query, additional properties as described in XXX should be included.
      in: query
      schema:
        type: boolean
  responses:
    RestApi204:
      description: |
        No Content: Already exists
    RestApi304:
      description: |
        Not Modified: If a request is made with an ETag and the Server detects that the client has already an up-to-date version of the
        resource, the server may response instead with 200 (Ok) with 304 (Not modified) where no payload  is attached to conserve traffic.
    RestApi400:
      description: |
        Bad Request: The request was badly formatted and could not be completed.
      content: {}
    RestApi404:
      description: |
        Not Found: The requested resource was not found.
      content: {}
    RestApi429:
      description: |
        Too many requests: A request may receive this error message instead of an response, if the server determined
        to many requests need to be handled. Optionally the Server may include the 'Retry-After' Header with a value
        based on seconds for an estimation when the client may try to restart the request."
      headers:
        Retry-After:
          schema:
            type: integer
            description: Seconds
    RestApi500:
      description: |
        Internal Server Error: An internal server error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
    RestApi501:
      description: |
        Not Implemented: Unsupported service or version in a URL should be answered with code 501. The client should not
        expect the service to be available anytime during the lifecycle of the server and should not poll the server with
        the same request to reduce resources consumption.
      content: {}
    RestApi502:
      description: |
        Bad Gateway: If a proxy or reverse proxy is set-up between the A834A Client and Server, in case the proxy is
        experiencing issue, this error code should be reported.
      content: {}
    RestApi503:
      description: |
        Service Unavailable: If a service is (temporary) not available (i.e. not yet fully initialized) it should
        return this error code to indicate the client, that the service may be available soon and the client may
        retry its request later on.(Other standard HTTP codes may be used by the A834A supplier to provide useful
        information to the clients nevertheless, the general principle is that overlap with error codes defined in
        the present document should be avoided.)
      content: {}
    WebSocket101:
      description: Successful switching of protocol to WebSocket.
      headers:
        Connection:
          schema:
            type: string
        Upgrade:
          schema:
            type: string
            enum:
              - websocket
        Sec-WebSocket-Accept:
          schema:
            type: object
      content: {}
    WebSocket400:
      description: Resource can only be accessed with WebSockets. For GET requests without the required WebSocket headers.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
    WebSocket501:
      description: Service is not implemented.
      content: {}
    WebSocket503:
      description: Service Unavailable.
      content: {}
  headers:
    ETag:
      description: |
        The RFC7232 ETag header field in a response provides the current entity-tag for the selected resource. An entity-tag
        is an opaque identifier for different versions of a resource over time, regardless whether multiple versions are valid
        at the same time. An entity-tag consists of an opaque quoted string, possibly prefixed by a weakness indicator.
      example: W/"abc", "42", "c0d5809f-cbfa-4ce9-8b03-2231fee3e1ee"
      required: false
      schema:
        type: string
